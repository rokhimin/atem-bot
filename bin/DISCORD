#!/usr/bin/env ruby
require 'discordrb'
require 'ygoprodeck'
require 'dotenv'

module Bot
  Dotenv.load(File.expand_path('../config/.env', __dir__))
  CONFIG = ENV['mode_discord']

  def self.create_bot
    Discordrb::Bot.new(
      token: ENV['token_discord'],
      client_id: ENV['client_id_discord'],
      intents: %i[servers server_messages server_presences server_members],
      compress_mode: :large
    )
  end

  def self.load_modules(bot, klass, path)
    new_module = Module.new
    const_set(klass.to_sym, new_module)
    Dir["app/bot/discord/#{path}/*.rb"].each { |file| load file }
    new_module.constants.each do |mod|
      mod_class = new_module.const_get(mod)

      bot.include! mod_class if mod_class < Discordrb::EventContainer

      mod_class.load(bot) if mod_class.respond_to?(:load)
    end
  end

  case CONFIG
  when 'development', 'production'
    bot = create_bot

    bot.ready do |_event|
      bot.game = ENV["game_discord_#{CONFIG}"] || 'Ready'
      puts "[#{Process.pid} #{Time.now}] Running Atem Bot - Discord"
    end

    bot.mention do |event|
      event.respond '**`/search` for searching yugioh card**'
    end

    load_modules(bot, :DiscordEvents, 'events')
    load_modules(bot, :DiscordCommands, 'commands')

    puts "[MODE : #{CONFIG.capitalize}]"
    bot.gateway.check_heartbeat_acks = false
    bot.run
  else
    puts 'SET mode_discord in /config/.env'
  end
end
